name: Build and Test Inventory App

on:
  push:
    branches:
      - branch7GitAction  # The branch to trigger on
  pull_request:
    branches:
      - branch7GitAction  # The branch to trigger on
  workflow_dispatch:  # Allow manual trigger if needed

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx (necessary for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Build the Docker image using the Dockerfile in the repository
      - name: Build Docker Image
        run: docker build -t inventory-manager .

      # 4. Run tests using pytest inside the Docker container
      - name: Run Tests - Integration Test
        run: docker run --rm inventory-manager python3 -m pytest tests/test_intergration_inventory_manager_base.py

      # 5. Run tests for the main inventory manager code
      - name: Run Tests - Inventory Manager Test
        run: docker run --rm inventory-manager python3 -m pytest tests/test_inventory_manager.py

      # 6. Run the docker and application
      - name: Run Application in Background
        run: docker run -d --name inventory-manager-app -p 5000:5000 inventory-manager
      
      - name: Wait for Application to Start
        run: |
          # Wait for Flask application to be fully up
          echo "Waiting for Flask to start..."
          until curl -s http://localhost:5000 > /dev/null; do
            echo "Waiting for Flask..."
            sleep 1
          done
          echo "Flask app is up!"

      # 8. Test if the website is up and running (status code 200)
      - name: Test Website Availability
        run: |
          if curl -s -o /dev/null -w "%{http_code}" http://localhost:5000 | grep -q "200"; then
            echo "The website is running."
          else
            echo "The website is not running."
            exit 1
          fi

      # 9. Show running containers for debugging (optional)
      - name: Show Running Containers
        run: docker ps
