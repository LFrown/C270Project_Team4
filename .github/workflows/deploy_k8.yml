name: Deploy to Minikube (Remote VM)

on:
  workflow_run:
    workflows: ['Build and Test Inventory App']
    types: [completed]
  workflow_dispatch:  # Allows manual trigger if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Expect (for password-based SSH)
        run: |
          sudo apt-get update && sudo apt-get install -y expect

      - name: Deploy to Minikube on Remote VM
        run: |
          echo "Starting deployment..."
          expect -c "
            spawn ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}
            expect \"password:\"
            send \"${{ secrets.VM_PASSWORD }}\r\"
            expect \"$ \"

            send \"echo ' Connected to VM'\r\"

            # Ensure Minikube is Running
            send \"echo ' Checking Minikube status...'\r\"
            send \"minikube status || minikube start --driver=docker\r\"

            # Ensure Kubernetes is Running
            send \"kubectl cluster-info || minikube start --driver=docker\r\"

            # Switch to Minikube Docker
            send \"eval \$(minikube docker-env)\r\"

            # Pull latest image from Docker Hub (ensures latest version is used)
            send \"echo ' Pulling latest Docker image...'\r\"
            send \"docker pull lfrown/inventory-manager:latest || { echo ' Docker pull failed'; exit 1; }\r\"

            # Delete Old Deployments
            send \"echo ' Deleting old Kubernetes resources...'\r\"
            send \"kubectl delete -f /Team4_k8s_App/deployment.yaml\r\"
            send \"kubectl delete -f /Team4_k8s_App/ingress.yaml\r\"
            send \"kubectl delete -f /Team4_k8s_App/service.yaml\r\"

            # Apply Updated Deployments
            send \"echo ' Applying new Kubernetes configurations...'\r\"
            send \"kubectl apply -f /Team4_k8s_App/service.yaml\r\"
            send \"kubectl apply -f /Team4_k8s_App/deployment.yaml\r\"
            send \"kubectl apply -f /Team4_k8s_App/ingress.yaml\r\"

            # Force Kubernetes to Use the Latest Image
            send \"echo ' Restarting Pods to Use Latest Image...'\r\"
            send \"kubectl rollout restart deployment inventory-manager-deployment\r\"

            # Restart Minikube Service
            send \"echo ' Restarting Minikube service...'\r\"
            send \"nohup minikube service inventory-manager-service --url &\r\"

            # Do NOT exit to keep the service running
            interact
          "
