name: Deploy to Minikube (Remote VM)

on:
  workflow_run:
    workflows: ['Build and Test Inventory App']
    types: [completed]
  workflow_dispatch:  # Allows manual trigger if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Expect (for automated password entry)
        run: |
          sudo apt-get update && sudo apt-get install -y expect

      - name: Test SSH Connection to VM (Using Password)
        run: |
          echo "Testing SSH Connection..."
          expect -c "
            spawn ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}
            expect \"password:\"
            send \"${{ secrets.VM_PASSWORD }}\r\"
            expect \"$ \"
            send \"echo 'âœ… SSH Connected Successfully!'\r\"
            expect \"$ \"
            send \"exit\r\"
            interact
          "

      - name: Deploy to Minikube on Remote VM
        run: |
          echo "Starting deployment..."
          expect -c "
            spawn ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}
            expect \"password:\"
            send \"${{ secrets.VM_PASSWORD }}\r\"
            expect \"$ \"
            send \"set -e\r\"
            send \"eval \$(minikube docker-env)\r\"
            send \"docker pull lfrown/inventory-manager:latest || { echo 'Docker pull failed'; exit 1; }\r\"
            send \"kubectl apply -f /Team4_k8s_App/deployment.yaml || { echo 'Failed to apply deployment'; exit 1; }\r\"
            send \"kubectl apply -f /Team4_k8s_App/service.yaml || { echo 'Failed to apply service'; exit 1; }\r\"
            send \"kubectl rollout restart deployment inventory-manager-deployment || { echo 'Failed to restart deployment'; exit 1; }\r\"
            send \"exit\r\"
            interact
          "

      - name: Get Minikube Service URL
        run: |
          echo "Fetching Minikube service URL..."
          expect -c "
            spawn ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}
            expect \"password:\"
            send \"${{ secrets.VM_PASSWORD }}\r\"
            expect \"$ \"
            send \"minikube service inventory-manager-service --url\r\"
            expect \"$ \
