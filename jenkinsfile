pipeline {
    agent any

    environment {
        BASE_URL = 'http://localhost:5000'  // URL of your Flask app
    }

    stages {
        stage('Test GET /products') {
            steps {
                script {
                    def response = sh(script: """
                        curl -X GET $BASE_URL/products -H "Content-Type: application/json"
                    """, returnStdout: true).trim()

                    echo "GET /products response: $response"
                }
            }
        }

        stage('Test POST /products') {
            steps {
                script {
                    def newProduct = '{"name": "Phone", "price": 800, "quantity": 50, "category": "Electronics"}'
                    def response = sh(script: """
                        curl -X POST $BASE_URL/products \
                        -H "Content-Type: application/json" \
                        -d '$newProduct'
                    """, returnStdout: true).trim()

                    echo "POST /products response: $response"
                }
            }
        }

        stage('Test PUT /products/<id>') {
            steps {
                script {
                    def updatedProduct = '{"name": "Phone Pro", "price": 950, "quantity": 45, "category": "Electronics"}'
                    def response = sh(script: """
                        curl -X PUT $BASE_URL/products/1 \
                        -H "Content-Type: application/json" \
                        -d '$updatedProduct'
                    """, returnStdout: true).trim()

                    echo "PUT /products/1 response: $response"
                }
            }
        }

        stage('Test DELETE /products/<id>') {
            steps {
                script {
                    def response = sh(script: """
                        curl -X DELETE $BASE_URL/products/1 -H "Content-Type: application/json"
                    """, returnStdout: true).trim()

                    echo "DELETE /products/1 response: $response"
                }
            }
        }
    }

    post {
        success {
            echo 'API testing completed successfully!'
        }
        failure {
            echo 'API testing failed. Check the logs for errors.'
        }
    }
}
